'''
Inspired by the video "If numbers were alphabetized" from the YouTube channel "VSauce", where numbers are alphabetized based on their names in English.

Source: https://www.youtube.com/shorts/C78GiUCKF9g
'''

# List generated by my friend ChatGPT. It contains the number names from 0 to 20, and then from 30 to 100, in increments of 10.
numbers_names = 'zero, one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve, thirteen, fourteen, fifteen, sixteen, seventeen, eighteen, nineteen, twenty, thirty, forty, fifty, sixty, seventy, eighty, ninety, one hundred'


def main():
    # Create a list of number names from the string.
    numbers_names_list = create_numbers_names_list(numbers_names)

    # Create a list of numbers based on the number names.
    numbers_list = create_numbers_list(numbers_names_list)

    # Create a dictionary from the list of number names.
    numbers_dict = create_numbers_dict(numbers_list, numbers_names_list)

    # Sort the dictionary in alphabetical order based on the names.
    numbers_in_alphabetical_order = sort_numbers_in_alphabetical_order(
        numbers_dict)

    # Sort the dictionary in reverse alphabetical order based on the names.
    numbers_in_reverse_alphabetical_order = sort_numbers_in_reverse_alphabetical_order(
        numbers_dict)

    # Display the sorted number names in alphabetical order.
    display_number_names_in_order(numbers_in_alphabetical_order, 'ascending')

    # Display the sorted number names in reverse alphabetical order.
    display_number_names_in_order(
        numbers_in_reverse_alphabetical_order, 'descending')


def create_numbers_names_list(numbers_names):
    '''
    Creates a list of number names from a comma-separated string.
    '''
    numbers_names_list = [name.strip() for name in numbers_names.split(',')]
    return numbers_names_list


def create_numbers_list(numbers_names):
    '''
    Creates a list of numbers corresponding to the number names.
    '''
    numbers_list = []

    for i in range(len(numbers_names)):
        if i <= 20:
            # For numbers from 0 to 20, append the index directly.
            numbers_list.append(i)
        else:
            # For numbers from 30 to 100, increments by 10.
            # Adjust the index to start from 30.
            tens = (i - 21) * 10 + 30
            numbers_list.append(tens)

    return numbers_list


def create_numbers_dict(numbers_list, numbers_names_list):
    '''
    Creates a dictionary where keys are indices and values are the corresponding number names.
    '''
    return {numbers_list[i]: numbers_names_list[i] for i in range(len(numbers_list))}


def sort_numbers_in_alphabetical_order(numbers_dict):
    '''
    Sorts the dictionary items based on the value (number names) in alphabetical order.
    '''
    return dict(sorted(numbers_dict.items(), key=lambda item: item[1]))


def sort_numbers_in_reverse_alphabetical_order(numbers_dict):
    '''
    Sorts the dictionary items based on the value (number names) in reverse alphabetical order.
    '''
    return dict(sorted(numbers_dict.items(), key=lambda item: item[1], reverse=True))


def display_number_names_in_order(sorted_numbers_dict, ordering):
    '''
    Displays the first and last 10 names from the sorted dictionary based on the ordering type.
    '''
    if ordering == 'ascending':
        print('=' * 40)
        print('First 10 numbers in alphabetical order:')
        print()
        display_first_10_names(sorted_numbers_dict)
        print()
        print('-' * 40)
        print()
        print('Last 10 numbers in alphabetical order:')
        print()
        display_last_10_names(sorted_numbers_dict)
        print('=' * 40)
        print()

    elif ordering == 'descending':
        print('=' * 40)
        print('First 10 numbers in reverse alphabetical order:')
        print()
        display_first_10_names(sorted_numbers_dict)
        print()
        print('-' * 40)
        print()
        print('Last 10 numbers in reverse alphabetical order:')
        print()
        display_last_10_names(sorted_numbers_dict)
        print('=' * 40)
        print()

    else:
        print('Error: Unknown ordering type. Please use "ascending" or "descending".')


def display_first_10_names(sorted_numbers_dict):
    '''
    Displays the first 10 names from the sorted dictionary.
    '''
    numbers = list(sorted_numbers_dict.keys())
    names = list(sorted_numbers_dict.values())

    # Display the first 10 names from the sorted dictionary.
    for i in range(0, min(10, len(numbers))):
        number = numbers[i]
        name = names[i]
        print(f'{number}: {name}')


def display_last_10_names(sorted_numbers_dict):
    '''
    Displays the last 10 names from the sorted dictionary.
    '''
    numbers = list(sorted_numbers_dict.keys())
    names = list(sorted_numbers_dict.values())

    # Display the last 10 names from the sorted dictionary.
    for i in range(max(0, len(numbers) - 10), len(numbers)):
        number = numbers[i]
        name = names[i]
        print(f'{number}: {name}')


if __name__ == '__main__':
    main()
